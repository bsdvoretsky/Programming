;; multi-vector
(define (mul a)
  (if (null? a)
      1
      (* (car a) (mul (cdr a)))))

(define (mul-list a b l)
  (if (= l 0)
      (car b)
      (+ (* (expt (car a) l) (car b)) (mul-list (cdr b) (cdr a) (- l 1)))))

(define (make-multi-vector sizes . fill)
  (define (inner s . f)
    (if (not (null? fill))
        (make-vector (mul sizes) (car fill))
        (make-vector (mul sizes) 0)))
  (list sizes (inner sizes fill)))

(define (multi-vector? m)
  (= (mul (car m)) (vector-length cadr m)))

(define (multi-vector-set! m indices x)
  (vector-set! (cadr m) (mul-list (car m) indices (- (length indices) 1)) x))

(define (multi-vector-ref m indices)
  (vector-ref (cadr m) (mul-list (car m) indices (- (length indices) 1))))
